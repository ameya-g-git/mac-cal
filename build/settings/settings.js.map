{"version":3,"file":"settings/settings.js","mappings":"MAgBA,SAASA,EAAYC,GACnB,IAAIC,EAAS,GACTC,EAAW,GACXC,GAAY,EAEhB,IAAK,MAAMC,KAAQJ,EAAQ,CAEzB,GADAG,EAAaD,GAAYE,EAAQH,EAAOI,KAAKD,GAChC,MAATA,EAAc,CAEhB,GADAH,EAAOK,MAC2B,OAA9BL,EAAOA,EAAOM,OAAS,GAAa,CACtCN,EAAOK,MACPL,EAAOI,KAAK,KACZ,QACF,CACAF,GAAY,CACd,CAEA,GAAa,MAATC,EAAc,CAIhB,GAHAD,GAAY,EACZD,EAAWA,EAASM,MAAM,GAAI,IAEzBN,EAAU,SAEf,OAAQA,GACN,IAAK,OACHD,EAAOI,KAAK,aACZ,MACF,IAAK,OACHJ,EAAOI,KAAK,OACZ,MACF,IAAK,MACHJ,EAAOI,KAAK,OACZ,MACF,IAAK,OACHJ,EAAOI,KAAK,aACZ,MACF,QACEJ,EAAOI,KAAK,IAAIH,MAEpBA,EAAW,EACb,CACF,CAEA,GAAIC,EAAW,MAAM,IAAIM,YAAY,2BAErC,MAAMC,EAAYT,EAAOU,KAAK,IAE9B,OAAOD,EAAUH,OAAS,GAAKG,EAAUF,MAAM,EAAG,IAAM,MAAQE,CAClE,CAEAE,OAAOC,iBAAiB,WAAY,MAlEpCC,uBACQC,QAAQC,KACXC,MAAM,CACLC,QAAQ,EACRC,eAAe,IAEhBC,KAAMJ,IACL,IAAKA,EAAK,GAAGK,IAAIC,MAAM,oCAGrB,MAFAC,SAASC,eAAe,sBAAsBC,UAAY,GAC1DF,SAASC,eAAe,iBAAiBC,UAAY,SAC/C,IAAIC,MAAM,mBAIxB,CAqDEC,GAEA,MAAMC,EAAaL,SAASC,eAAe,eACrCK,EAAiBN,SAASC,eAAe,eACzCM,EAAYP,SAASC,eAAe,eACpCO,EAAgBR,SAASC,eAAe,aAE9CM,EAAUjB,iBAAiB,aAAemB,IACxCT,SAASC,eAAe,SAASS,MAAMC,QAAU,UAGnDJ,EAAUjB,iBAAiB,aAAc,KACvCsB,QAAQC,IAAI,QACZb,SAASC,eAAe,SAASS,MAAMC,QAAU,SAGnDX,SAASC,eAAe,YAAYX,iBAAiB,QAAS,KAC5DU,SAASC,eAAe,YAAYa,QAC/BN,EAAcE,MAAMC,QAAU,QAC9BH,EAAcE,MAAMC,QAAU,SAGrCX,SAASe,iBAAiB,kBAAkBC,QAASC,IACnD,MAAOC,EAAGC,GAAQF,EAAKG,GAAGC,MAAM,KAEhCJ,EAAK3B,iBAAiB,QAAUmB,IAC9BA,EAAEa,iBACFjB,EAAWkB,OAAS,IAAIJ,MACxBb,EAAekB,UAAYhD,EAAY6B,EAAWkB,WAItDlB,EAAWf,iBAAiB,QAAUmB,IACpC,IACEH,EAAekB,UAAYhD,EAAY6B,EAAWkB,OAClDvB,SAASC,eAAe,cAAcS,MAAMC,QAAU,MACxD,CAAE,MACAX,SAASC,eAAe,cAAcS,MAAMC,QAAU,cACxD,IAWFX,SAASC,eAAe,iBAAiBX,iBAAiB,SAAWmB,IACnEG,QAAQC,IAAI,UACZY,MAAQ,EACRjC,QAAQC,KACLC,MAAM,CAAEC,QAAQ,EAAMC,eAAe,IACrCC,KAAK,KACJL,QAAQkC,QAAQC,YAAY,CAC1BC,WAAYvB,EAAWkB,MACvBM,WAAYrB,EAAcM,YAG7BgB,MAAOrB,GAAMG,QAAQmB,MAAMtB,O","sources":["webpack://mac-cal/./src/settings/settings.js"],"sourcesContent":["async function verifyURL() {\n  await browser.tabs\n    .query({\n      active: true,\n      currentWindow: true,\n    })\n    .then((tabs) => {\n      if (!tabs[0].url.match(/.*:\\/\\/mytimetable\\.mcmaster\\.ca/)) {\n        document.getElementById(\"wrong-page-content\").className = \"\";\n        document.getElementById(\"popup-content\").className = \"hidden\";\n        throw new Error(\"Wrong website!\");\n      }\n    });\n  return;\n}\n\nfunction parseFormat(format) {\n  let output = [];\n  let specCode = \"\";\n  let specifier = false; // whether or not we're currently parsing a specifier\n\n  for (const char of format) {\n    specifier ? (specCode += char) : output.push(char);\n    if (char === \"{\") {\n      output.pop();\n      if (output[output.length - 1] === \"\\\\\") {\n        output.pop();\n        output.push(\"{\");\n        continue;\n      }\n      specifier = true;\n    }\n\n    if (char === \"}\") {\n      specifier = false;\n      specCode = specCode.slice(0, -1);\n\n      if (!specCode) continue;\n\n      switch (specCode) {\n        case \"code\":\n          output.push(\"MATH 1ZA3\");\n          break;\n        case \"type\":\n          output.push(\"LEC\");\n          break;\n        case \"sec\":\n          output.push(\"C01\");\n          break;\n        case \"room\":\n          output.push(\"PGCLL 127\");\n          break;\n        default:\n          output.push(`{${specCode}}`);\n      }\n      specCode = \"\";\n    }\n  }\n\n  if (specifier) throw new SyntaxError(\"Curly brace not closed.\");\n\n  const outputStr = output.join(\"\");\n\n  return outputStr.length > 45 ? outputStr.slice(0, 42) + \"...\" : outputStr;\n}\n\nwindow.addEventListener(\"pageshow\", () => {\n  verifyURL();\n\n  const formatSpec = document.getElementById(\"format-spec\");\n  const timeBlockTitle = document.getElementById(\"block-title\");\n  const infoModal = document.getElementById(\"format-info\");\n  const blockLocation = document.getElementById(\"block-loc\");\n\n  infoModal.addEventListener(\"mouseenter\", (e) => {\n    document.getElementById(\"modal\").style.display = \"block\";\n  });\n\n  infoModal.addEventListener(\"mouseleave\", () => {\n    console.log(\"left\");\n    document.getElementById(\"modal\").style.display = \"none\";\n  });\n\n  document.getElementById(\"room-loc\").addEventListener(\"input\", () => {\n    document.getElementById(\"room-loc\").checked\n      ? (blockLocation.style.display = \"block\")\n      : (blockLocation.style.display = \"none\");\n  });\n\n  document.querySelectorAll(\"#format-btns>*\").forEach((elem) => {\n    const [_, spec] = elem.id.split(\"-\");\n\n    elem.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      formatSpec.value += `{${spec}} `;\n      timeBlockTitle.innerText = parseFormat(formatSpec.value);\n    });\n  });\n\n  formatSpec.addEventListener(\"input\", (e) => {\n    try {\n      timeBlockTitle.innerText = parseFormat(formatSpec.value);\n      document.getElementById(\"format-err\").style.display = \"none\";\n    } catch {\n      document.getElementById(\"format-err\").style.display = \"inline-block\";\n    }\n  });\n\n  // TODO; fuck you fuck this fucking stupid piece of shit fucking javascript god i hatge this language and i hate everything about it\n  // why the fuck are errors so fucking vague and they don't give any information abotu the actual fucking issue fucking god\n  // nothing works and i donte ven have version control to revert to a version that works fuck this stupid fucking extension\n  // fuck you fuck yoyu fuck youi\n\n  // okay. i've restored it back to before i decided to delve into the hell of the sendMessage api.\n  // i'm done for today. good fucking lord. least enjoyable programming session. sob\n\n  document.getElementById(\"popup-content\").addEventListener(\"submit\", (e) => {\n    console.log(\"sun,to\");\n    tabId = 0;\n    browser.tabs\n      .query({ active: true, currentWindow: true })\n      .then(() => {\n        browser.runtime.sendMessage({\n          nameFormat: formatSpec.value,\n          includeLoc: blockLocation.checked,\n        });\n      })\n      .catch((e) => console.error(e));\n  });\n});\n"],"names":["parseFormat","format","output","specCode","specifier","char","push","pop","length","slice","SyntaxError","outputStr","join","window","addEventListener","async","browser","tabs","query","active","currentWindow","then","url","match","document","getElementById","className","Error","verifyURL","formatSpec","timeBlockTitle","infoModal","blockLocation","e","style","display","console","log","checked","querySelectorAll","forEach","elem","_","spec","id","split","preventDefault","value","innerText","tabId","runtime","sendMessage","nameFormat","includeLoc","catch","error"],"sourceRoot":""}